<Window x:Class="LoginScreen0.PasswordsScreen"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LoginScreen0"
        mc:Ignorable="d"     
        Title="PasswordsScreen" Height="450" Width="800" ResizeMode="CanResize" SizeToContent="Manual" WindowStartupLocation="CenterOwner" WindowState="Normal" HorizontalAlignment="Left" VerticalAlignment="Top">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="TabItem.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FF4F027C" Offset="0.0"/>
            <GradientStop Color="#7EB4EA" Offset="2.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.Static.Border" Color="#FFAF95BD"/>
        <LinearGradientBrush x:Key="TabItem.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFAF95BD" Offset="0.0"/>
            <GradientStop Color="#FFAF95BD" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="TabItem.MouseOver.Border" Color="#a090f0"/>
        <SolidColorBrush x:Key="TabItem.Selected.Background" Color="#FFAF95BD" Opacity="0.4"/>
        <SolidColorBrush x:Key="TabItem.Selected.Border" Color="#a090f0"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Background" Color="#FFAF95BD"/>
        <SolidColorBrush x:Key="TabItem.Disabled.Border" Color="#FFAF95BD"/>
        <Style x:Key="TabItemStyle1" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Background" Value="{StaticResource TabItem.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabItem.Static.Border}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                            <Border x:Name="mainBorder" Background="{TemplateBinding Background}" BorderThickness="1,1,1,0" BorderBrush="{TemplateBinding BorderBrush}" Margin="0">
                                <Border x:Name="innerBorder" Background="{StaticResource TabItem.Selected.Background}" BorderThickness="1,1,1,0" BorderBrush="{StaticResource TabItem.Selected.Border}" Margin="-1" Opacity="0"/>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" Focusable="False" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.MouseOver.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="mainBorder" Value="{StaticResource TabItem.Disabled.Border}"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Left"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,0,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,0,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,0,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Bottom"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,0,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,0,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,0,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Right"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="0,-2,-2,-2"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="0,1,1,1"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="0,1,1,1"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding TabStripPlacement, RelativeSource={RelativeSource AncestorType={x:Type TabControl}}}" Value="Top"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Margin" Value="-2,-2,-2,0"/>
                                <Setter Property="Opacity" TargetName="innerBorder" Value="1"/>
                                <Setter Property="BorderThickness" TargetName="innerBorder" Value="1,1,1,0"/>
                                <Setter Property="BorderThickness" TargetName="mainBorder" Value="1,1,1,0"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>

        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFDFC9FF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FF8D5AA0"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Background="#FFDFC9FF">



        <TabControl Grid.ColumnSpan="2">
            <TabItem Style="{DynamicResource TabItemStyle1}" Header="Store Passwords" Foreground="#FFB5B2F1" FontFamily="Dubai Medium">
                <TabItem.Background>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="#FF4F027C"/>
                        <GradientStop Color="#FFF3F3F3" Offset="2"/>
                    </LinearGradientBrush>
                </TabItem.Background>
                <Grid>
                    <Grid.Background>
                        <RadialGradientBrush SpreadMethod="Pad" RadiusX="0.1" RadiusY="0.1" Center="0.9,4" GradientOrigin="4,0.5" MappingMode="Absolute">
                            <GradientStop Color="#FF3F3391" Offset="0.158"/>
                            <GradientStop Color="#FF3F3391" Offset="0.632"/>
                        </RadialGradientBrush>
                    </Grid.Background>


                    <TextBox x:Name="EnterWebsiteBox" BorderBrush="#FF5F50F7" Background="#FFE8DBFD" HorizontalAlignment="Left" FontSize="14" TextAlignment="Left" TextWrapping="NoWrap"  VerticalAlignment="Top" Width="140" Height="30" Margin="10,60,0,0" MaxLength="35" MaxLines="1"/>
                    <TextBox x:Name="EnterUserNameBox" BorderBrush="#FF5F50F7" Background="#FFE8DBFD" HorizontalAlignment="Left" FontSize="14" TextAlignment="Left"  TextWrapping="NoWrap"  VerticalAlignment="Top" Width="140" Height="30" Margin="155,60,0,0" MaxLength="16" MaxLines="1" />
                    <TextBox x:Name="EnterPasswordBox" BorderBrush="#FF5F50F7" Background="#FFE8DBFD" HorizontalAlignment="Left" FontSize="14" TextAlignment="Left" TextWrapping="NoWrap"  VerticalAlignment="Top" Width="140" Height="30" Margin="300,60,0,0" MaxLength="32" MaxLines="1"  />
                    <Label Content="Website" Foreground="#FFAB72AE" FontSize="16" HorizontalAlignment="Left" Margin="10,30,0,0" VerticalAlignment="Top"/>
                    <Label Content="User name" Foreground="#FFAB72AE" FontSize="16" HorizontalAlignment="Left" Margin="155,30,0,0" VerticalAlignment="Top"/>
                    <Label Content="Password" Foreground="#FFAB72AE" FontSize="16" HorizontalAlignment="Left" Margin="300,30,0,0" VerticalAlignment="Top"/>
                    <Button Style="{DynamicResource ButtonStyle1}" FontSize="16" Foreground="#FFFA98FF"  Content="Enter" BorderBrush="#FF5F50F7" Background="#FFB480FF" HorizontalAlignment="Left" Margin="370,95,0,0" VerticalAlignment="Top" RenderTransformOrigin="0.505,0.503" Width="70" Height="35" Click="Button_Click"/>
                    <Image Stretch="UniformToFill" Source="/background-textures.png" Opacity="0.2" Panel.ZIndex="-1" OpacityMask="Black" Grid.ColumnSpan="2" Margin="0,-30,0,0"/>
                </Grid>

            </TabItem>
            <TabItem Style="{DynamicResource TabItemStyle1}" Header="Password Generator "  Foreground="#FFB5B2F1" FontFamily="Dubai Medium">
                <TabItem.Background>
                    <LinearGradientBrush EndPoint="0,1">
                        <GradientStop Color="#FF4F027C"/>
                        <GradientStop Color="#FFF3F3F3" Offset="2"/>
                    </LinearGradientBrush>
                </TabItem.Background>
                <Grid Margin="1,0,-1,0">

                    <Grid.Background>
                        <RadialGradientBrush SpreadMethod="Pad" RadiusX="0.1" RadiusY="0.1" Center="0.9,4" GradientOrigin="4,0.5" MappingMode="Absolute">
                            <GradientStop Color="#FF3F3391" Offset="0.158"/>
                            <GradientStop Color="#FF3F3391" Offset="0.632"/>
                        </RadialGradientBrush>
                    </Grid.Background>

                    <TextBox x:Name="GenPasswordBox" TextAlignment="Center" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="352,51,0,0" VerticalAlignment="Top" Width="256" Background="#FFE8DBFD" BorderBrush="#FF5F50F7" />
                    <Label Content="Password Options:" FontSize="18" HorizontalAlignment="Left" Margin="64,4,0,0" VerticalAlignment="Top" Width="222" Height="37" Foreground="#FFAB72AE"/>
                    <Label Content= "Results:" FontSize="15" Foreground="#FFAB72AE" HorizontalAlignment="Left" Margin="352,19,0,0" VerticalAlignment="Top"/>

                    <Button x:Name="Gen_NewPassword" Foreground="#FFFA98FF" FontSize="14" Style="{DynamicResource ButtonStyle1}" Content="Generate" Click="Gen_NewPassword_Click" HorizontalAlignment="Left" Margin="250,161,0,0" VerticalAlignment="Top" Width="60" Height="33" BorderBrush="#FF5F50F7" Background="#FFB480FF"/>

                    <CheckBox x:Name="CheckBox_Caps" Content="Capitals" Foreground="#FFAB72AE" HorizontalAlignment="Left" Margin="236,64,0,0" VerticalAlignment="Top" Unchecked="CheckBox_Checked" Checked="CheckBox_Checked" BorderBrush="#FF5F50F7" Background="#FFE8DBFD"/>
                    <CheckBox x:Name="CheckBox_Sym" Content="Symbols" Foreground="#FFAB72AE" HorizontalAlignment="Left" Margin="74,64,0,0" VerticalAlignment="Top" Unchecked="CheckBox_Checked" Checked="CheckBox_Checked" BorderBrush="#FF5F50F7" Background="#FFE8DBFD"/>
                    <CheckBox x:Name="CheckBox_Nums" Content="Numbers" Foreground="#FFAB72AE" HorizontalAlignment="Left" Margin="155,64,0,0" VerticalAlignment="Top" Unchecked="CheckBox_Checked" Checked="CheckBox_Checked" BorderBrush="#FF5F50F7" Background="#FFE8DBFD"/>

                    <Rectangle HorizontalAlignment="Left" Height="115" Margin="64,41,0,0" Stroke="#FF201B2B" VerticalAlignment="Top" Width="246" Panel.ZIndex="-1"/>
                    <Slider x:Name="Slider" HorizontalAlignment="Left" IsSnapToTickEnabled="True" Maximum="32" Minimum="6" Margin="88,131,0,0" VerticalAlignment="Top" Width="198" TickPlacement="BottomRight" TickFrequency="2" BorderBrush="#FF5F50F7" Opacity="0.7" Foreground="#FFFF003A"/>
                    <Label Content="Length" Foreground="#FFAB72AE" FontSize="10"  HorizontalAlignment="Left" Margin="204,105,0,0" VerticalAlignment="Top" Width="40" Height="25"/>
                    <TextBox x:Name="SliderNum" HorizontalAlignment="Left" Margin="244,105,0,0" TextAlignment="Center" Text="{Binding ElementName=Slider, Path=Value, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" TextWrapping="Wrap" VerticalAlignment="Top" Width="20" Height="21" Background="#FFE8DBFD" BorderBrush="#FF5F50F7"/>
                    <Image Stretch="UniformToFill" Source="/background-textures.png" Opacity="0.2" Panel.ZIndex="-1" OpacityMask="Black" Margin="-5,-30,-5,0" RenderTransformOrigin="0.5,0.5" Grid.ColumnSpan="2" >
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Slider x:Name="Slider_Pw_Strength" HorizontalAlignment="Left"  Maximum="100" Minimum="0" Margin="378,118,0,0" VerticalAlignment="Top" TickPlacement="BottomRight" TickFrequency="2" BorderBrush="#FF5F50F7" Opacity="0.7" Background="Transparent" RenderTransformOrigin="0.5,0.5" ScrollViewer.CanContentScroll="True" Width="200"/>
                    <Label Content="Password Strength" Foreground="#FFAB72AE" FontSize="14" HorizontalAlignment="Left" Margin="418,88,0,0" VerticalAlignment="Top"/>
                    <Label Content="Strong" FontSize="12" HorizontalAlignment="Left" Margin="378,139,0,0" VerticalAlignment="Top" Foreground="#FF17FF00"/>
                    <Label Content="Weak" FontSize="12" HorizontalAlignment="Left" Margin="540,139,0,0" VerticalAlignment="Top" Foreground="Red"/>
                    <Rectangle HorizontalAlignment="Left" Height="66" Margin="378,97,0,0" Stroke="Black" VerticalAlignment="Top" Width="200" Panel.ZIndex="3" Fill="Black" Visibility="Visible" Opacity="0"/>
                    <Rectangle HorizontalAlignment="Left" Height="21" Margin="244,105,0,0" Stroke="Black" VerticalAlignment="Top" Width="20" Panel.ZIndex="3" Fill="Black" Visibility="Visible" Opacity="0"/>
                    <Rectangle HorizontalAlignment="Left" Height="4" Margin="383,137,0,0" Stroke="Black" VerticalAlignment="Top" Width="190" StrokeThickness="0" Opacity="0.4" FlowDirection="LeftToRight">
                        <Rectangle.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0,0.5">
                                <GradientStop Color="#FF00640E" Offset="1"/>
                                <GradientStop Color="Red" Offset="0.308"/>
                            </LinearGradientBrush>
                        </Rectangle.Fill>
                    </Rectangle>
                    <Button Content="Copy To Box" Foreground="#FFFA98FF" Click="CopyTo_Click" FontSize="12" Style="{DynamicResource ButtonStyle1}" HorizontalAlignment="Left" Margin="622,51,0,0"  VerticalAlignment="Top" Height="32" Width="64" BorderBrush="#FF5F50F7" Background="#FFB480FF"/>

                </Grid>

            </TabItem>
        </TabControl>
    </Grid>
</Window>
